<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>温习江湖</title>
    <link>https://wweir.cc/</link>
    <description>Recent content on 温习江湖</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 19 Jan 2019 18:58:03 +0800</lastBuildDate>
    
	<atom:link href="https://wweir.cc/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>关于我</title>
      <link>https://wweir.cc/about/</link>
      <pubDate>Mon, 15 Jan 2018 15:39:28 +0800</pubDate>
      
      <guid>https://wweir.cc/about/</guid>
      <description>个人信息 备注 数年前（2013~2015）曾用 Vimwiki 写过一段时间的博客，随着参加工作，压力的加大，渐渐停更、荒废了。 随着工作内容的稳定与深入，渐渐</description>
    </item>
    
    <item>
      <title>透明代理 Sower 技术剖析</title>
      <link>https://wweir.cc/post/%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86-sower-%E6%8A%80%E6%9C%AF%E5%89%96%E6%9E%90/</link>
      <pubDate>Sat, 19 Jan 2019 18:58:03 +0800</pubDate>
      
      <guid>https://wweir.cc/post/%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86-sower-%E6%8A%80%E6%9C%AF%E5%89%96%E6%9E%90/</guid>
      <description>Sower 是一套实现透明代理的完整解决方案，本文将从第一视角，剖析 sower 中使用的技术点，供学习交流之用。 项目地址：github.com/wweir/so</description>
    </item>
    
    <item>
      <title>开发基于 Envoy 的高性能服务网关</title>
      <link>https://wweir.cc/post/%E5%BC%80%E5%8F%91%E5%9F%BA%E4%BA%8E-envoy-%E7%9A%84%E9%AB%98%E6%80%A7%E8%83%BD%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3/</link>
      <pubDate>Fri, 26 Oct 2018 17:39:49 +0800</pubDate>
      
      <guid>https://wweir.cc/post/%E5%BC%80%E5%8F%91%E5%9F%BA%E4%BA%8E-envoy-%E7%9A%84%E9%AB%98%E6%80%A7%E8%83%BD%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3/</guid>
      <description>Envoy 简介 说起 Envoy，听过的人可能不是很多，但如果说 service mesh（服务网格），应该就有不少人听过了。目前 service mesh 一个使用较多、相对成熟的方案是配置</description>
    </item>
    
    <item>
      <title>Golang 项目组织形式的演进</title>
      <link>https://wweir.cc/post/golang-%E9%A1%B9%E7%9B%AE%E7%BB%84%E7%BB%87%E5%BD%A2%E5%BC%8F%E7%9A%84%E6%BC%94%E8%BF%9B/</link>
      <pubDate>Thu, 25 Oct 2018 10:38:54 +0800</pubDate>
      
      <guid>https://wweir.cc/post/golang-%E9%A1%B9%E7%9B%AE%E7%BB%84%E7%BB%87%E5%BD%A2%E5%BC%8F%E7%9A%84%E6%BC%94%E8%BF%9B/</guid>
      <description>包管理与项目组织形式的历史 很多从其它语言转 golang 的程序员都会对 GOPATH 这个设定感到困惑，为什么其它语言不要求把所有代码放在同一个目录，golang 就有</description>
    </item>
    
    <item>
      <title>分布式强一致性读的工程思索</title>
      <link>https://wweir.cc/post/%E5%88%86%E5%B8%83%E5%BC%8F%E5%BC%BA%E4%B8%80%E8%87%B4%E6%80%A7%E8%AF%BB%E7%9A%84%E5%B7%A5%E7%A8%8B%E6%80%9D%E7%B4%A2/</link>
      <pubDate>Sun, 25 Mar 2018 14:31:52 +0800</pubDate>
      
      <guid>https://wweir.cc/post/%E5%88%86%E5%B8%83%E5%BC%8F%E5%BC%BA%E4%B8%80%E8%87%B4%E6%80%A7%E8%AF%BB%E7%9A%84%E5%B7%A5%E7%A8%8B%E6%80%9D%E7%B4%A2/</guid>
      <description>缘由 两个月前就想写篇文章记录下这段思考，奈何一直在忙一些切身相关的事情，没合适的时间和状态，只能抽空写点，可读性相对会低一些，留待过段时间进</description>
    </item>
    
    <item>
      <title>资源限制(RLIMIT_NOFILE)的调整细节及内部实现</title>
      <link>https://wweir.cc/post/%E8%B5%84%E6%BA%90%E9%99%90%E5%88%B6rlimit_nofile%E7%9A%84%E8%B0%83%E6%95%B4%E7%BB%86%E8%8A%82%E5%8F%8A%E5%86%85%E9%83%A8%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Thu, 01 Mar 2018 17:38:11 +0800</pubDate>
      
      <guid>https://wweir.cc/post/%E8%B5%84%E6%BA%90%E9%99%90%E5%88%B6rlimit_nofile%E7%9A%84%E8%B0%83%E6%95%B4%E7%BB%86%E8%8A%82%E5%8F%8A%E5%86%85%E9%83%A8%E5%AE%9E%E7%8E%B0/</guid>
      <description>前言 这是一段两年前的研究，当时也写了篇数千字的长文，因为经验、行文方面的不足，可读性不高，没有对外公开。这里依当时的研究成果，重写一篇来介绍</description>
    </item>
    
    <item>
      <title>系统调用在 Golang 中的实践</title>
      <link>https://wweir.cc/post/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E5%9C%A8-golang-%E4%B8%AD%E7%9A%84%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Tue, 06 Feb 2018 07:39:58 +0800</pubDate>
      
      <guid>https://wweir.cc/post/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E5%9C%A8-golang-%E4%B8%AD%E7%9A%84%E5%AE%9E%E8%B7%B5/</guid>
      <description>在看一些其它语言实现的基础工具时，时而发现其中有我们需要的某项特殊功能。究其源码，一般会看到两种底层实现：汇编、系统调用。这里的系统调用就是</description>
    </item>
    
    <item>
      <title>探索 Golang 一致性原语</title>
      <link>https://wweir.cc/post/%E6%8E%A2%E7%B4%A2-golang-%E4%B8%80%E8%87%B4%E6%80%A7%E5%8E%9F%E8%AF%AD/</link>
      <pubDate>Sun, 21 Jan 2018 22:04:41 +0800</pubDate>
      
      <guid>https://wweir.cc/post/%E6%8E%A2%E7%B4%A2-golang-%E4%B8%80%E8%87%B4%E6%80%A7%E5%8E%9F%E8%AF%AD/</guid>
      <description>缘由 前段时间，一位业内人士问我：你用了几年的 golang，对哪一块有什么比较深的感受么？ 这话提醒了我，用了挺久的 golang，虽和身边的朋友</description>
    </item>
    
  </channel>
</rss>